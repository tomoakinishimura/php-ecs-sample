version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR
      - aws --version
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - REPOSITORY_PHP_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/ecstest-php
      - REPOSITORY_NGINX_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/ecstest-nginx
  build:
    commands:
      - echo Build started on `date`
      - docker build -t $REPOSITORY_PHP_URI:latest .
      - docker tag $REPOSITORY_PHP_URI:latest $REPOSITORY_PHP_URI:$IMAGE_TAG
      - docker build -t $REPOSITORY_NGINX_URI:latest -f Dockerfile-nginx .
      - docker tag $REPOSITORY_NGINX_URI:latest $REPOSITORY_NGINX_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_PHP_URI:latest
      - docker push $REPOSITORY_PHP_URI:$IMAGE_TAG
      - docker push $REPOSITORY_NGINX_URI:latest
      - docker push $REPOSITORY_NGINX_URI:$IMAGE_TAG
      - echo DB Migration...
      - aws ecs run-task --cluster ecstest --task-definition ecstest-migrate
      - echo Writing image definitions file...
      - echo "[" > imagedefinitions.json
      - echo "{\"name\":\"ecstest-php\",\"imageUri\":\"${REPOSITORY_PHP_URI}:${IMAGE_TAG}\"}," >> imagedefinitions.json
      - echo "{\"name\":\"ecstest-nginx\",\"imageUri\":\"${REPOSITORY_NGINX_URI}:${IMAGE_TAG}\"}" >> imagedefinitions.json
      - echo "]" >> imagedefinitions.json
artifacts:
    files: imagedefinitions.json
